name: Docker Build and Push

on:
    push:
        branches: [main]
        paths:
            - 'apps/**'
            - 'packages/**'
            - '.github/workflows/docker-build.yml'
            - 'docker-compose.yml'
            - '**/Dockerfile'
    pull_request:
        branches: [main]
        paths:
            - 'apps/**'
            - 'packages/**'
            - '.github/workflows/docker-build.yml'
            - 'docker-compose.yml'
            - '**/Dockerfile'
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    API_IMAGE_NAME: ${{ github.repository }}-api
    WEB_IMAGE_NAME: ${{ github.repository }}-web

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for API
              id: meta-api
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=sha,format=short

            - name: Extract metadata (tags, labels) for Web
              id: meta-web
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=sha,format=short

            - name: Build and push API image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./apps/api/Dockerfile
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta-api.outputs.tags }}
                  labels: ${{ steps.meta-api.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      TURBO_TEAM=${{ secrets.TURBO_TEAM }}
                      TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}

            - name: Build and push Web image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./apps/web/Dockerfile
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta-web.outputs.tags }}
                  labels: ${{ steps.meta-web.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      TURBO_TEAM=${{ secrets.TURBO_TEAM }}
                      TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}

    test-containers:
        runs-on: ubuntu-latest
        needs: build-and-push
        if: github.event_name != 'pull_request'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Compose
              run: |
                  docker-compose -f docker-compose.test.yml up -d

            - name: Wait for services to be ready
              run: |
                  sleep 30

            - name: Run API tests
              run: |
                  docker-compose -f docker-compose.test.yml exec -T api pytest

            - name: Run Web tests
              run: |
                  docker-compose -f docker-compose.test.yml exec -T web pnpm test

            - name: Cleanup
              run: |
                  docker-compose -f docker-compose.test.yml down
